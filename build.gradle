plugins {
	id 'fabric-loom' version '1.3-SNAPSHOT'
	id 'maven-publish'
	id "com.modrinth.minotaur" version "2.+"
}


import com.modrinth.minotaur.dependencies.DependencyType
import com.modrinth.minotaur.dependencies.ModDependency

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

// Définition de la fonction pour lire une variable à partir du fichier .env
def getModrinthKey() {
	def envFile = file('env/.env')
	def envContent = envFile.text
	def envLines = envContent.tokenize('\n')

	envLines.each { line ->
		def keyValue = line.tokenize('=')
		if (keyValue.size() == 2) {
			def key = keyValue[0].trim()
			def value = keyValue[1].trim()
			project.ext.set(key, value)
		}
	}

	// Vous pouvez maintenant accéder aux variables comme ceci :
	return project.ext.MODRINTH_TOKEN
}

repositories {
	maven { url = 'https://maven.minecraftforge.net/' }
	maven { url = 'https://jitpack.io' }
	maven { url "https://maven.shedaniel.me/" }
	maven { url "https://maven.terraformersmc.com/releases/" }
	maven { url = "https://api.modrinth.com/maven" }
}

modrinth {
	token = getModrinthKey()
	projectId = 'kK2k0VPu'
	versionNumber = project.mod_version.split("-")[0]
	versionName = "[" + project.mod_version.split("-")[1] + "]" + ' Things ' + project.mod_version.split("-")[0]
	changelog = "Fixed metal detector tooltip https://github.com/Paulem79/Things-Fabric/commit/a1ee5bb597d58eeb819206856a619f5e0aae43f3"
	uploadFile = remapJar
	versionType = "beta"
	gameVersions = [project.mod_version.split("-")[1]]
	loaders = ['fabric']
	dependencies = [
			new ModDependency('P7dR8mSH', DependencyType.REQUIRED)
	]
}

loom {
    runs {
		// This adds a new gradle task that runs the datagen API: "gradlew runDatagen"
		datagen {
			inherit server
			name "Data Generation"
			vmArg "-Dfabric-api.datagen"
			vmArg "-Dfabric-api.datagen.output-dir=${file("src/main/generated")}"
			vmArg "-Dfabric-api.datagen.modid=things"
 
			runDir "build/datagen"
		}
	}
}

// Add the generated resources to the main source set
sourceSets {
	main {
		resources {
			srcDirs += [
					'src/main/generated'
			]
		}
	}
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	
	// Uncomment the following line to enable the deprecated Fabric API modules. 
	// These are included in the Fabric API production distribution and allow you to update your mod to the latest modules at a later more convenient time.

	// modImplementation "net.fabricmc.fabric-api:fabric-api-deprecated:${project.fabric_version}"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}